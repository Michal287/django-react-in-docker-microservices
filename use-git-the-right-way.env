# Using git, the right way
# https://realpython.com/django-setup/
NOTE: This section is fairly advanced and completely optional. If this
is your first time setting up Django, you can skip this section.

If you are not using GitHub or Bitbucket as a central repo, you should create
a separate branch of your local repo for development.

First, create a new directory called “dev” within your “django15_project” directory,
navigate into the newly created directory, and then clone (copy) your entire
Django project:

$ git clone /path/to/your/project/

For example: /Users/michaelherman/desktop/django15_project

git clone /Users/peter/source/repos/CS50-Mobile-App-Development-with-React-Native/openclassroom/Book-tracking-app

This command creates an exact copy of your repo, which includes all your commits
and branches. Always develop from this directory by creating separate branches
for each major change to your project:

$ git branch <branchname>
Next switch to that branch:

$ git checkout <branchname>
You can always check to see what branches are available with this command:

$ git branch
After you are done developing, commit your changes:

$ git add -A
$ git commit -am "some message"
Now you want to merge your changes with the master branch:

$ git checkout master
$ git merge <branchname>
You can PUSH your changes to GitHub or Bitbucket if you use either service.
Finally, navigate back to your main production folder and PULL the changes:

$ git pull
Example:
git 

(env)$ cd dev
(env)$ cd django15_project
(env)$ git branch 06212013
(env)$ git checkout 06212013
(env)$ git add -A
(env)$ git commit -am "description of changes made"
(env)$ git checkout master
(env)$ git merge 06212013
(env)$ cd ..
(env)$ git pull /Users/michaelherman/desktop/django15_project/dev/django15_project
Workflow
Now that your app is set up, follow either of these simple workflows every time you want to make changes to your app:

Basic:

Navigate to your project
Activate virtualenv
Develop
Commit changes
Deploy
Deactivate virtualenv
Advanced:

Navigate to your project
Activate virtualenv
Create and checkout a new git branch
Develop
Commit changes
Merge the new branch with your master branch
PULL the changes into the production folder
Deploy
Deactivate virtualenv
Cheers! Any questions? Suggestions?

Let’s create a basic app!

##############################################################################33
peter@peterkuria MINGW64 ~/source/repos/CS50-Mobile-App-Development-with-React-Native/openclassroom/Book-tracking-app (master)
$ git status
On branch master
Your branch is up to date with 'origin/master'.

Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        deleted:    Book.js
        modified:   README.md
        deleted:    database.js

Untracked files:
  (use "git add <file>..." to include in what will be committed)

        index.html
        static/
        use-git-the-right-way.env

no changes added to commit (use "git add" and/or "git commit -a")
########################################################################################

